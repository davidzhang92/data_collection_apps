CREATE PROCEDURE AuthenticateUserPassword
    @StoredSalt VARCHAR(25),
    @StoredHashedPassword VARBINARY(MAX),
    @ProvidedPassword NVARCHAR(50)
AS
BEGIN
    DECLARE @ComputedHash VARBINARY(MAX);

    -- Compute the hash of the provided password with the stored salt
    SET @ComputedHash = HASHBYTES('SHA2_512', CAST(@ProvidedPassword AS VARBINARY(MAX)) + CAST(@StoredSalt AS VARBINARY(MAX)));

    IF @ComputedHash = @StoredHashedPassword
    BEGIN
        PRINT '1';
    END
    ELSE
    BEGIN
        PRINT '0';
    END
END;

-- sp execution

-- DECLARE @Username NVARCHAR(MAX);
-- DECLARE @Password NVARCHAR(MAX);
-- DECLARE @Salt VARCHAR(MAX);
-- DECLARE @HashedPassword VARBINARY(MAX);
-- DECLARE @AccessLevel uniqueidentifier;


-- SET @Username = 'test3'; -- replace with your username
-- SET @Password = 'password3'; -- replace with your password
-- SET @AccessLevel = '20000000-0000-0000-0000-000000000000'

-- EXEC PasswordGenerator @Username, @Password, @Salt = @Salt OUTPUT, @HashedPassword = @HashedPassword OUTPUT;

-- INSERT INTO user_master(id, username, salt, password_hash, access_level, is_superadmin, created_date, is_deleted)

-- VALUES (NEWID(), @Username, @Salt, @HashedPassword, @AccessLevel, '0', GETDATE(), '0');


-- select * from user_master