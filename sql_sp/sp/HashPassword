USE [DataCollection]
GO
/****** Object:  StoredProcedure [dbo].[HashPassword]    Script Date: 27-Dec-23 2:52:36 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[HashPassword]

    @Username NVARCHAR(MAX),
    @Password NVARCHAR(MAX),
    @Salt VARCHAR(MAX) OUTPUT,
    @HashedPassword VARBINARY(MAX) OUTPUT
AS
BEGIN
    DECLARE @Seed int;
    DECLARE @LCV tinyint;
    DECLARE @CTime DATETIME;

    SET @CTime = GETDATE();
    SET @Seed = (DATEPART(hh, @Ctime) * 10000000) + (DATEPART(n, @CTime) * 100000) + (DATEPART(s, @CTime) * 1000) + DATEPART(ms, @CTime);
    SET @LCV = 1;
    SET @Salt = CHAR(ROUND((RAND(@Seed) * 94.0) + 32, 3));

    WHILE (@LCV < 25)
    BEGIN
        SET @Salt = @Salt + CHAR(ROUND((RAND() * 94.0) + 32, 3));
        SET @LCV = @LCV + 1;
    END;


    SET @HashedPassword = HASHBYTES('SHA2_512', CAST(@Password AS VARBINARY(MAX)) + CAST(@Salt AS VARBINARY(MAX)));
END



-- sp execution

-- DECLARE @Username NVARCHAR(MAX);
-- DECLARE @Password NVARCHAR(MAX);
-- DECLARE @Salt VARCHAR(MAX);
-- DECLARE @HashedPassword VARBINARY(MAX);
-- DECLARE @AccessLevel uniqueidentifier;


-- SET @Username = 'test4'; -- replace with your username
-- SET @Password = 'password4'; -- replace with your password
-- SET @AccessLevel = '20000000-0000-0000-0000-000000000000'

-- EXEC HashPassword @Username, @Password, @Salt = @Salt OUTPUT, @HashedPassword = @HashedPassword OUTPUT;

-- INSERT INTO user_master(id, username, salt, password_hash, access_level, is_superadmin, created_date, is_deleted)

-- VALUES (NEWID(), @Username, @Salt, @HashedPassword, @AccessLevel, '0', GETDATE(), '0');