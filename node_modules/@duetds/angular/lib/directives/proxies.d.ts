import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone } from '@angular/core';
export declare const proxyInputs: (Cmp: any, inputs: string[]) => void;
export declare const proxyMethods: (Cmp: any, methods: string[]) => void;
export declare const proxyOutputs: (instance: any, el: any, events: string[]) => void;
export declare function ProxyCmp(opts: {
    inputs?: any;
    methods?: any;
}): (cls: any) => any;
import { Components } from '@duetds/components';
export declare interface DuetActionButton extends Components.DuetActionButton {
}
export declare class DuetActionButton {
    protected z: NgZone;
    duetActionEvent: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetAlert extends Components.DuetAlert {
}
export declare class DuetAlert {
    protected z: NgZone;
    duetDismiss: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetBadge extends Components.DuetBadge {
}
export declare class DuetBadge {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetBreadcrumb extends Components.DuetBreadcrumb {
}
export declare class DuetBreadcrumb {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetBreadcrumbs extends Components.DuetBreadcrumbs {
}
export declare class DuetBreadcrumbs {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetButton extends Components.DuetButton {
}
export declare class DuetButton {
    protected z: NgZone;
    duetFocus: EventEmitter<CustomEvent>;
    duetBlur: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetCaption extends Components.DuetCaption {
}
export declare class DuetCaption {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetCard extends Components.DuetCard {
}
export declare class DuetCard {
    protected z: NgZone;
    duetToggle: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetCheckbox extends Components.DuetCheckbox {
}
export declare class DuetCheckbox {
    protected z: NgZone;
    duetChange: EventEmitter<CustomEvent>;
    duetFocus: EventEmitter<CustomEvent>;
    duetBlur: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetChoice extends Components.DuetChoice {
}
export declare class DuetChoice {
    protected z: NgZone;
    duetChange: EventEmitter<CustomEvent>;
    duetFocus: EventEmitter<CustomEvent>;
    duetBlur: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetChoiceGroup extends Components.DuetChoiceGroup {
}
export declare class DuetChoiceGroup {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetCollapsible extends Components.DuetCollapsible {
}
export declare class DuetCollapsible {
    protected z: NgZone;
    duetToggle: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetCombobox extends Components.DuetCombobox {
}
export declare class DuetCombobox {
    protected z: NgZone;
    duetChange: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetCookieConsent extends Components.DuetCookieConsent {
}
export declare class DuetCookieConsent {
    protected z: NgZone;
    duetCookieConsent: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetDatePicker extends Components.DuetDatePicker {
}
export declare class DuetDatePicker {
    protected z: NgZone;
    duetChange: EventEmitter<CustomEvent>;
    duetBlur: EventEmitter<CustomEvent>;
    duetFocus: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetDivider extends Components.DuetDivider {
}
export declare class DuetDivider {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetEditableTable extends Components.DuetEditableTable {
}
export declare class DuetEditableTable {
    protected z: NgZone;
    duetTableToggle: EventEmitter<CustomEvent>;
    duetMenuClick: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetEmptyState extends Components.DuetEmptyState {
}
export declare class DuetEmptyState {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetFieldset extends Components.DuetFieldset {
}
export declare class DuetFieldset {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetFooter extends Components.DuetFooter {
}
export declare class DuetFooter {
    protected z: NgZone;
    duetChange: EventEmitter<CustomEvent>;
    duetLogoClick: EventEmitter<CustomEvent>;
    duetMenuClick: EventEmitter<CustomEvent>;
    duetItemClick: EventEmitter<CustomEvent>;
    duetAnalytics: EventEmitter<CustomEvent>;
    duetEvent: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetGrid extends Components.DuetGrid {
}
export declare class DuetGrid {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetGridItem extends Components.DuetGridItem {
}
export declare class DuetGridItem {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetHeader extends Components.DuetHeader {
}
export declare class DuetHeader {
    protected z: NgZone;
    duetChange: EventEmitter<CustomEvent>;
    duetSessionClick: EventEmitter<CustomEvent>;
    duetSearchClick: EventEmitter<CustomEvent>;
    duetUserClick: EventEmitter<CustomEvent>;
    duetLanguageSelect: EventEmitter<CustomEvent>;
    duetLogoClick: EventEmitter<CustomEvent>;
    duetBackClick: EventEmitter<CustomEvent>;
    duetContactClick: EventEmitter<CustomEvent>;
    duetItemClick: EventEmitter<CustomEvent>;
    duetSkipClick: EventEmitter<CustomEvent>;
    duetAnalytics: EventEmitter<CustomEvent>;
    duetMobileNavToggle: EventEmitter<CustomEvent>;
    duetEvent: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetHeading extends Components.DuetHeading {
}
export declare class DuetHeading {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetHero extends Components.DuetHero {
}
export declare class DuetHero {
    protected z: NgZone;
    duetClick: EventEmitter<CustomEvent>;
    duetAnalytics: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetIcon extends Components.DuetIcon {
}
export declare class DuetIcon {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetInput extends Components.DuetInput {
}
export declare class DuetInput {
    protected z: NgZone;
    duetInput: EventEmitter<CustomEvent>;
    duetChange: EventEmitter<CustomEvent>;
    duetBlur: EventEmitter<CustomEvent>;
    duetClear: EventEmitter<CustomEvent>;
    duetFocus: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetLabel extends Components.DuetLabel {
}
export declare class DuetLabel {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetLayout extends Components.DuetLayout {
}
export declare class DuetLayout {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetLink extends Components.DuetLink {
}
export declare class DuetLink {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetList extends Components.DuetList {
}
export declare class DuetList {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetListItem extends Components.DuetListItem {
}
export declare class DuetListItem {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetLogo extends Components.DuetLogo {
}
export declare class DuetLogo {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetModal extends Components.DuetModal {
}
export declare class DuetModal {
    protected z: NgZone;
    duetOpen: EventEmitter<CustomEvent>;
    duetClose: EventEmitter<CustomEvent>;
    duetBeforeClose: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetMultiselect extends Components.DuetMultiselect {
}
export declare class DuetMultiselect {
    protected z: NgZone;
    duetChange: EventEmitter<CustomEvent>;
    duetFocus: EventEmitter<CustomEvent>;
    duetBlur: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetNotification extends Components.DuetNotification {
}
export declare class DuetNotification {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetNotificationDrawer extends Components.DuetNotificationDrawer {
}
export declare class DuetNotificationDrawer {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetNumberInput extends Components.DuetNumberInput {
}
export declare class DuetNumberInput {
    protected z: NgZone;
    duetChange: EventEmitter<CustomEvent>;
    duetInput: EventEmitter<CustomEvent>;
    duetBlur: EventEmitter<CustomEvent>;
    duetFocus: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetPagination extends Components.DuetPagination {
}
export declare class DuetPagination {
    protected z: NgZone;
    duetPageChange: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetParagraph extends Components.DuetParagraph {
}
export declare class DuetParagraph {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetProgress extends Components.DuetProgress {
}
export declare class DuetProgress {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetRadio extends Components.DuetRadio {
}
export declare class DuetRadio {
    protected z: NgZone;
    duetChange: EventEmitter<CustomEvent>;
    duetFocus: EventEmitter<CustomEvent>;
    duetBlur: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetRadioGroup extends Components.DuetRadioGroup {
}
export declare class DuetRadioGroup {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetRangeSlider extends Components.DuetRangeSlider {
}
export declare class DuetRangeSlider {
    protected z: NgZone;
    duetChange: EventEmitter<CustomEvent>;
    duetInput: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetRangeStepper extends Components.DuetRangeStepper {
}
export declare class DuetRangeStepper {
    protected z: NgZone;
    duetRangeStepUpdate: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetScrollable extends Components.DuetScrollable {
}
export declare class DuetScrollable {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetSelect extends Components.DuetSelect {
}
export declare class DuetSelect {
    protected z: NgZone;
    duetChange: EventEmitter<CustomEvent>;
    duetFocus: EventEmitter<CustomEvent>;
    duetBlur: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetSpacer extends Components.DuetSpacer {
}
export declare class DuetSpacer {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetSpinner extends Components.DuetSpinner {
}
export declare class DuetSpinner {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetStep extends Components.DuetStep {
}
export declare class DuetStep {
    protected z: NgZone;
    duetStepClick: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetStepper extends Components.DuetStepper {
}
export declare class DuetStepper {
    protected z: NgZone;
    duetStepChange: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetTab extends Components.DuetTab {
}
export declare class DuetTab {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetTabGroup extends Components.DuetTabGroup {
}
export declare class DuetTabGroup {
    protected z: NgZone;
    duetChange: EventEmitter<CustomEvent>;
    duetTabChange: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetTable extends Components.DuetTable {
}
export declare class DuetTable {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetTextarea extends Components.DuetTextarea {
}
export declare class DuetTextarea {
    protected z: NgZone;
    duetInput: EventEmitter<CustomEvent>;
    duetChange: EventEmitter<CustomEvent>;
    duetBlur: EventEmitter<CustomEvent>;
    duetFocus: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetToggle extends Components.DuetToggle {
}
export declare class DuetToggle {
    protected z: NgZone;
    duetChange: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetTooltip extends Components.DuetTooltip {
}
export declare class DuetTooltip {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetTray extends Components.DuetTray {
}
export declare class DuetTray {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetUpload extends Components.DuetUpload {
}
export declare class DuetUpload {
    protected z: NgZone;
    duetChange: EventEmitter<CustomEvent>;
    duetBlur: EventEmitter<CustomEvent>;
    duetFocus: EventEmitter<CustomEvent>;
    duetReady: EventEmitter<CustomEvent>;
    duetDone: EventEmitter<CustomEvent>;
    duetState: EventEmitter<CustomEvent>;
    duetDelete: EventEmitter<CustomEvent>;
    duetCancel: EventEmitter<CustomEvent>;
    duetProgress: EventEmitter<CustomEvent>;
    duetUpload: EventEmitter<CustomEvent>;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetUploadAriaStatus extends Components.DuetUploadAriaStatus {
}
export declare class DuetUploadAriaStatus {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
export declare interface DuetVisuallyHidden extends Components.DuetVisuallyHidden {
}
export declare class DuetVisuallyHidden {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
}
