/*!
 * Built with Duet Design System
 */
import { r as registerInstance, h, F as Fragment, H as Host, g as getElement } from './index-81967d12.js';
import { i as inheritGlobalTheme } from './themeable-component-cb76be7c.js';
import { g as getLocaleString } from './language-utils-bf701d37.js';
import './string-utils-5954f458.js';

var actionArrowRightSmall={"title":"action-arrow-right-small","tags":"action arrow right small caret","svg":"<svg fill=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\"><path d=\"M19.5 12a2.3 2.3 0 0 1-.78 1.729L7.568 23.54a1.847 1.847 0 0 1-2.439-2.773l9.752-8.579a.25.25 0 0 0 0-.376L5.129 3.233A1.847 1.847 0 0 1 7.568.46l11.148 9.808A2.31 2.31 0 0 1 19.5 12z\"/></svg>"};

const duetBreadcrumbsCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:block}.duet-breadcrumbs{font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"}.duet-breadcrumbs ol{display:flex;flex-direction:row;flex-wrap:wrap;gap:8px;align-items:center;justify-content:flex-start;padding:10px 16px;color:#00294d;list-style:none;background:#f3f9fc;border-bottom:1px solid #e1e3e6}@media (min-width: 62em){.duet-breadcrumbs ol{padding:10px 36px}}.duet-breadcrumbs.duet-theme-turva{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"}.duet-breadcrumbs.duet-theme-turva ol{color:#171c3a;background:#f5f5f7}.duet-breadcrumbs .duet-breadrumbs-arrow{display:inherit;align-items:center;justify-content:center;width:0.375rem;height:0.375rem}.duet-breadcrumbs .hide{display:none}";

const DuetBreadcrumbs = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.observers = [];
    this.breadcrumbsAriaLabel = getLocaleString({
      fi: "Murupolku",
      sv: "Ströbröd",
      en: "Breadcrumbs",
    });
    /**
     * Theme
     */
    this.theme = "";
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    inheritGlobalTheme(this);
    this.children = Array.from(this.element.children);
  }
  connectedCallback() {
    Array.from(this.element.children).forEach(child => {
      const observer = new MutationObserver(() => (this.children = Array.from(this.element.children)));
      observer.observe(child, {
        childList: true,
        subtree: true,
        attributes: true,
        characterData: true,
      });
      this.observers = [...this.observers, observer];
    });
  }
  disconnectedCallback() {
    this.observers.forEach(observer => observer.disconnect());
    this.observers = [];
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return (h(Host, null, h("nav", { "aria-label": this.breadcrumbsAriaLabel, class: {
        "duet-breadcrumbs": true,
        "duet-theme-turva": this.theme === "turva",
      } }, h("ol", null, this.children.map((child, index) => (h(Fragment, null, index > 0 && (h("li", { "aria-hidden": "true" }, h("duet-icon", { class: "duet-breadrumbs-arrow", size: "auto", icon: actionArrowRightSmall.svg, margin: "none", color: "currentColor" }))), h("li", { innerHTML: child.outerHTML }), h("div", { class: "hide" }, h("slot", null)))))))));
  }
  get element() { return getElement(this); }
};
DuetBreadcrumbs.style = duetBreadcrumbsCss;

export { DuetBreadcrumbs as duet_breadcrumbs };
