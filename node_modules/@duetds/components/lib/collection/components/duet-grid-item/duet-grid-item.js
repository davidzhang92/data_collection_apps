/*!
 * Built with Duet Design System
 */
import { Component, h, Host, Prop } from "@stencil/core";
import { inheritGlobalTheme } from "../../common/themeable-component";
export class DuetGridItem {
  constructor() {
    /**
     * Make the grid item fill the remaining available grid space.
     */
    this.fill = false;
    /**
     * Theme of the grid item.
     */
    this.theme = "";
    /**
     * Controls the margin of the component.
     */
    this.margin = "auto";
    /**
     * @internal
     * Enable or disable the automatic responsive behaviour of the grid item.
     * This property is used internally by Grid, and should not be set by the developer.
     */
    this.responsive = false;
    /**
     * @internal
     * Switch the breakpoint used to trigger the content stacking.
     * This property is used internally by Grid, and should not be set by the developer.
     */
    this.breakpoint = "small";
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    inheritGlobalTheme(this);
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return (h(Host, { style: {
        "min-width": this.minWidth,
        "max-width": this.maxWidth,
      }, class: {
        "duet-m-0": this.margin === "none",
        "duet-theme-turva": this.theme === "turva",
        "duet-grid-item": true,
        "duet-grid-item-fill": this.fill,
        "duet-grid-item-responsive": this.responsive,
        "duet-grid-item-br-medium": this.breakpoint === "medium",
        "duet-grid-item-br-x-large": this.breakpoint === "x-large",
      } }));
  }
  static get is() { return "duet-grid-item"; }
  static get encapsulation() { return "scoped"; }
  static get originalStyleUrls() { return {
    "$": ["duet-grid-item.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["duet-grid-item.css"]
  }; }
  static get properties() { return {
    "fill": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Make the grid item fill the remaining available grid space."
      },
      "attribute": "fill",
      "reflect": false,
      "defaultValue": "false"
    },
    "maxWidth": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Sets the maximum width for the grid item using any valid numeric CSS\nvalue. E.g. \"300px\"."
      },
      "attribute": "max-width",
      "reflect": false
    },
    "minWidth": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Sets the minimum width for the grid item using any valid numeric CSS\nvalue. E.g. \"33.333%\"."
      },
      "attribute": "min-width",
      "reflect": false
    },
    "theme": {
      "type": "string",
      "mutable": true,
      "complexType": {
        "original": "DuetTheme",
        "resolved": "\"\" | \"default\" | \"turva\"",
        "references": {
          "DuetTheme": {
            "location": "import",
            "path": "../../common-types"
          }
        }
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Theme of the grid item."
      },
      "attribute": "theme",
      "reflect": false,
      "defaultValue": "\"\""
    },
    "margin": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "DuetMargin",
        "resolved": "\"auto\" | \"none\"",
        "references": {
          "DuetMargin": {
            "location": "import",
            "path": "../../common-types"
          }
        }
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Controls the margin of the component."
      },
      "attribute": "margin",
      "reflect": false,
      "defaultValue": "\"auto\""
    },
    "responsive": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [{
            "name": "internal",
            "text": "Enable or disable the automatic responsive behaviour of the grid item.\nThis property is used internally by Grid, and should not be set by the developer."
          }],
        "text": ""
      },
      "attribute": "responsive",
      "reflect": false,
      "defaultValue": "false"
    },
    "breakpoint": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "DuetGridBreakpoint",
        "resolved": "\"medium\" | \"small\" | \"x-large\"",
        "references": {
          "DuetGridBreakpoint": {
            "location": "import",
            "path": "../../common-types"
          }
        }
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [{
            "name": "internal",
            "text": "Switch the breakpoint used to trigger the content stacking.\nThis property is used internally by Grid, and should not be set by the developer."
          }],
        "text": ""
      },
      "attribute": "breakpoint",
      "reflect": false,
      "defaultValue": "\"small\""
    }
  }; }
}
