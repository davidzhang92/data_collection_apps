/*!
 * Built with Duet Design System
 */
import { p as proxyCustomElement, H, h, b as Host } from './p-df05a117.js';
import { m as mediaQueryMedium, a as mediaQueryLarge, b as mediaQueryXLarge, c as mediaQueryXxLarge, d as mediaQueryXxxLarge, e as mediaQuerySmall, s as sizeNavigation, f as sizeHeader } from './p-266411cf.js';
import { i as inheritGlobalTheme } from './p-4ebf1618.js';
import { d as debounce } from './p-0b3f675e.js';

const duetTableCss = "duet-table{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;margin-bottom:20px !important;display:block;font-variant-numeric:tabular-nums}duet-table table,duet-table thead,duet-table tbody,duet-table tfoot,duet-table th,duet-table td,duet-table tr{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}duet-table.duet-m-0{margin:0 !important}duet-table table{width:100%;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;text-align:left;border-spacing:0;border-collapse:separate}duet-table.duet-theme-turva table{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"}duet-table td{-webkit-hyphens:auto;hyphens:auto;color:#00294d}duet-table.duet-theme-turva td{color:#171c3a}duet-table th{font-weight:600;line-height:1.25;color:#657787;text-align:left}duet-table.duet-theme-turva th{color:#747475}duet-table tbody th{font-weight:600;color:#00294d}duet-table.duet-theme-turva tbody th{color:#171c3a}duet-table .duet-table-action-row td:last-child{justify-self:end;padding-right:20px !important;white-space:nowrap}.duet-table-flattened table,.duet-table-flattened thead,.duet-table-flattened tbody,.duet-table-flattened tfoot,.duet-table-flattened th,.duet-table-flattened td,.duet-table-flattened tr{display:block}.duet-table-flattened thead tr{position:absolute !important;top:0;width:1px !important;height:1px !important;padding:0 !important;overflow:hidden !important;clip:rect(1px, 1px, 1px, 1px) !important;border:0 !important}.duet-table-flattened td{line-height:1.25}.duet-table-flattened td:not(:last-child){margin-bottom:16px !important}.duet-table-flattened tbody td,.duet-table-flattened tbody th,.duet-table-flattened tfoot td{padding:0 !important;text-align:left !important}.duet-table-flattened tbody th{font-weight:600;line-height:1.25;color:#657787;text-align:left}.duet-table-flattened td[data-heading]::before{margin-bottom:4px !important;display:block;font-size:1rem;font-weight:600;color:#00294d;content:attr(data-heading)}.duet-table-flattened.duet-theme-turva td[data-heading]::before{color:#171c3a}.duet-table-sticky thead th{position:sticky;top:0;background:white}.duet-table-striped td,.duet-table-striped th{padding:20px !important}@media (max-width: 35.9375em){.duet-table-striped td,.duet-table-striped th{padding:20px 12px !important}}.duet-table-striped tbody th{background:white}.duet-table-striped.duet-table-sticky thead th{border-bottom:1px solid #e1e3e6}.duet-table-striped.duet-table-sticky.duet-theme-turva thead th{border-bottom-color:#e4e4e6}.duet-table-striped tbody:not(:first-of-type) th{padding-top:40px !important}.duet-table-striped tbody:only-of-type tr:nth-of-type(odd){background:rgba(0, 80, 128, 0.04)}.duet-table-striped.duet-theme-turva tbody:only-of-type tr:nth-of-type(odd){background:rgba(23, 28, 58, 0.04)}.duet-table-striped tbody:not(:only-of-type) tr:nth-of-type(even){background:rgba(0, 80, 128, 0.04)}.duet-table-striped.duet-theme-turva tbody:not(:only-of-type) tr:nth-of-type(even){background:rgba(23, 28, 58, 0.04)}.duet-table-striped tfoot td{border-top:1px solid #e1e3e6}.duet-table-striped.duet-theme-turva tfoot td{border-top-color:#e4e4e6}.duet-table-striped.duet-table-flattened tbody:not(:first-of-type) th{padding-top:20px !important}.duet-table-striped.duet-table-flattened tr{padding:20px !important}.duet-table-striped.duet-table-flattened tfoot td{border-top:0}.duet-table-striped.duet-table-flattened tfoot tr{border-top:1px solid #e1e3e6}.duet-table-striped.duet-table-flattened.duet-theme-turva tfoot tr{border-top-color:#e4e4e6}.duet-table-fixed th,.duet-table-minimal th,.duet-table-plain th{padding:16px !important;border-bottom:1px solid #657787}.duet-table-fixed th:first-child,.duet-table-minimal th:first-child,.duet-table-plain th:first-child{padding-left:0 !important}.duet-table-fixed th:last-child,.duet-table-minimal th:last-child,.duet-table-plain th:last-child{padding-right:0 !important}.duet-theme-turva.duet-table-fixed th,.duet-theme-turva.duet-table-minimal th,.duet-theme-turva.duet-table-plain th{border-bottom-color:#444445}.duet-table-fixed tbody th,.duet-table-minimal tbody th,.duet-table-plain tbody th{padding-top:40px !important;border-bottom-color:#e1e3e6}.duet-theme-turva.duet-table-fixed tbody th,.duet-theme-turva.duet-table-minimal tbody th,.duet-theme-turva.duet-table-plain tbody th{border-bottom-color:#e4e4e6}.duet-table-fixed td,.duet-table-minimal td,.duet-table-plain td{padding:16px !important}.duet-table-fixed td:first-child,.duet-table-minimal td:first-child,.duet-table-plain td:first-child{padding-left:0 !important}.duet-table-fixed td:last-child,.duet-table-minimal td:last-child,.duet-table-plain td:last-child{padding-right:0 !important}.duet-table-fixed tbody td,.duet-table-minimal tbody td,.duet-table-plain tbody td{border-bottom:1px solid #e1e3e6}.duet-theme-turva.duet-table-fixed tbody td,.duet-theme-turva.duet-table-minimal tbody td,.duet-theme-turva.duet-table-plain tbody td{border-bottom-color:#e4e4e6}.duet-table-flattened.duet-table-fixed tbody:first-of-type th,.duet-table-flattened.duet-table-minimal tbody:first-of-type th,.duet-table-flattened.duet-table-plain tbody:first-of-type th{padding-top:0 !important}.duet-table-flattened.duet-table-fixed td,.duet-table-flattened.duet-table-minimal td,.duet-table-flattened.duet-table-plain td,.duet-table-flattened.duet-table-fixed tbody th,.duet-table-flattened.duet-table-minimal tbody th,.duet-table-flattened.duet-table-plain tbody th{border-bottom:0}.duet-table-flattened.duet-table-fixed tr,.duet-table-flattened.duet-table-minimal tr,.duet-table-flattened.duet-table-plain tr{padding:20px 0 !important}.duet-table-flattened.duet-table-fixed tbody th,.duet-table-flattened.duet-table-minimal tbody th,.duet-table-flattened.duet-table-plain tbody th{padding-top:20px !important}.duet-table-flattened.duet-table-fixed tfoot td,.duet-table-flattened.duet-table-minimal tfoot td,.duet-table-flattened.duet-table-plain tfoot td{margin-bottom:4px !important}.duet-table-flattened.duet-table-fixed tbody:not(:only-of-type) tr:first-child,.duet-table-flattened.duet-table-minimal tbody:not(:only-of-type) tr:first-child,.duet-table-flattened.duet-table-plain tbody:not(:only-of-type) tr:first-child{border-bottom:0}.duet-table-plain.duet-table-flattened tbody tr{border-bottom:1px solid #e1e3e6}.duet-table-plain.duet-table-flattened.duet-theme-turva tbody tr{border-bottom-color:#e4e4e6}.duet-table-minimal tbody tr,.duet-table-minimal tbody tr td{vertical-align:top;border-bottom:0 none}.duet-table-minimal tbody tr:last-of-type,.duet-table-minimal tbody tr:last-of-type td{border-bottom:1px solid #e1e3e6}.duet-table-minimal.duet-table-flattened tbody tr,.duet-table-minimal.duet-table-flattened tbody tr td{border-bottom:0 none}.duet-table-minimal.duet-table-flattened tbody tr td[data-heading]::before{display:none}.duet-table-minimal.duet-table-flattened tfoot{border-top:1px solid #e1e3e6}.duet-table-minimal.duet-table-flattened.duet-theme-turva tfoot{border-top-color:#e4e4e6}.duet-table-fixed table{table-layout:fixed}.duet-table-fixed tbody tr,.duet-table-fixed tbody tr td,.duet-table-fixed tbody tr td:first-child{padding:4px !important;vertical-align:text-bottom;border-bottom:0 none}.duet-table-fixed thead{display:none}.duet-table-fixed tbody tr,.duet-table-fixed tbody tr td{border-bottom:0 none}.duet-table-fixed:not(.duet-table-flattened) tfoot{border-top:1px solid #e1e3e6}.duet-table-fixed:not(.duet-table-flattened).duet-theme-turva tfoot{border-top-color:#e4e4e6}.duet-table-scrollable{position:relative;width:100%;overflow-x:auto;background:linear-gradient(90deg, #fff 0%, rgba(255, 255, 255, 0)), linear-gradient(-90deg, #fff 0%, rgba(255, 255, 255, 0)) 100% 0, radial-gradient(farthest-side at 0% 50%, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0)), radial-gradient(farthest-side at 100% 50%, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0)) 100% 0%;background-repeat:no-repeat;background-attachment:local, local, scroll, scroll;background-size:100px 100%, 100px 100%, 12px 100%, 12px 100%}.duet-table-selected-column{background:rgba(0, 119, 179, 0.08)}.duet-theme-turva .duet-table-selected-column{background:rgba(68, 68, 69, 0.08)}.duet-table-sortable tbody tr td:first-child,.duet-table-sortable thead tr th:first-child{padding:20px}.duet-table-sortable:not(.duet-table-flattened) tfoot{border-top:1px solid #e1e3e6}.duet-table-sortable:not(.duet-table-flattened).duet-theme-turva tfoot{border-top-color:#e4e4e6}.duet-table-actions table{table-layout:auto}.duet-table-actions thead th:last-child{width:1px;white-space:nowrap}.duet-editable-table-table.duet-table-flattened tr{display:grid;grid-template-columns:repeat(2, 1fr);grid-auto-rows:auto;gap:10px}.duet-editable-table-table.duet-table-flattened tr.duet-table-action-row td:last-child::before{padding:0;content:\"\"}.duet-editable-table-table.duet-table-flattened td{grid-column:1/2}.duet-editable-table-table.duet-table-flattened td:first-child{grid-row:1;grid-column:1}.duet-editable-table-table.duet-table-flattened td:last-child{grid-row:1;grid-column:2}";

// remove wrapping speech marks.
// media query tokens are wrapped in speech marks,
// which need to be removed before use with matchMedia.
const unwrap = (str) => str.substring(1, str.length - 1);
const breakpointToToken = {
  none: "all",
  "none-scrollable": "all",
  small: unwrap(mediaQuerySmall),
  medium: unwrap(mediaQueryMedium),
  large: unwrap(mediaQueryLarge),
  "x-large": unwrap(mediaQueryXLarge),
  "xx-large": unwrap(mediaQueryXxLarge),
  "xxx-large": unwrap(mediaQueryXxxLarge),
};
const stickyTopValues = {
  none: 0,
  "with-links": parseFloat(sizeNavigation) * 16,
  "without-links": parseFloat(sizeHeader) * 16,
};
const DuetTable = /*@__PURE__*/ proxyCustomElement(class extends H {
  constructor() {
    super();
    this.__registerHost();
    /**
     * Tracks whether the breakpoint is matched. This is set to true by default so that JavaScript disabled in SSR mode we get accessible table data first.
     */
    this.matchesBreakpoint = true;
    /**
     * Controls the margin of the component.
     */
    this.margin = "auto";
    /**
     * Style variation of the table.
     */
    this.variation = "striped";
    /**
     * Controls whether the table has a sticky header.
     * Sticky headers are not compatible with breakpoint="none-scrollable".
     */
    this.sticky = false;
    /**
     * Adjust the distance from top of the viewport (in pixels) when the
     * table header becomes sticky.
     */
    this.stickyDistance = "with-links";
    /**
     * By default the table is responsive - it will be flattened at narrow viewport widths.
     * This prop controls the breakpoint at which the table should be rendered as a _regular_ table.
     * Set to "none" to disable the responsive functionality.
     * Set to "none-scrollable" to disable responsive functionality _and_ allow horizontal scrolling -
     * this is useful for comparison tables where it's important to maintain column and row layout.
     */
    this.breakpoint = "small";
    this.handleMediaQueryChange = (mq) => {
      this.matchesBreakpoint = mq.matches;
    };
  }
  connectedCallback() {
    this.mq = matchMedia(breakpointToToken[this.breakpoint]);
    this.mq.addEventListener("change", debounce(this.handleMediaQueryChange, 50));
    this.handleMediaQueryChange(this.mq);
    this.observer = new MutationObserver(() => debounce(this.copyHeadingsToCells(), 50));
    this.observer.observe(this.element, {
      childList: true,
      subtree: true,
    });
  }
  componentWillLoad() {
    inheritGlobalTheme(this);
    this.copyHeadingsToCells();
    if (this.sticky && this.breakpoint === "none-scrollable") {
      console.warn(`[DUET WARNING]: sticky and breakpoint="none-scrollable" are incompatible. Scrollable takes precedence`);
    }
    if (this.sticky) {
      const stickyTop = stickyTopValues[this.stickyDistance];
      const headingElements = this.element.querySelectorAll("thead th");
      headingElements.forEach(th => (th.style.top = `${stickyTop}px`));
    }
  }
  componentDidLoad() {
    // this clears all pending mutations,
    // that way we avoid dealing with any initial changes
    // and only get genuine mutations as rows are added/removed
    this.observer ? this.observer.takeRecords() : null;
  }
  disconnectedCallback() {
    this.observer.disconnect();
    this.observer = null;
    this.mq.removeListener(this.handleMediaQueryChange);
    this.mq = null;
    this.matchesBreakpoint = true;
  }
  /**
   * Local methods.
   */
  copyHeadingsToCells() {
    const headingElements = this.element.querySelectorAll("thead th");
    const rowElements = this.element.querySelectorAll("tbody tr");
    const headings = Array.from(headingElements).map(th => th.textContent.trim());
    rowElements.forEach(tr => {
      tr.querySelectorAll("td").forEach((td, i) => {
        if (headings[i]) {
          td.dataset.heading = headings[i];
        }
      });
    });
  }
  render() {
    return (h(Host, { class: {
        [`duet-table-${this.variation}`]: true,
        "duet-table-flattened": !this.matchesBreakpoint,
        // sticky only valid when in regular table layout
        "duet-table-sticky": this.matchesBreakpoint && this.sticky,
        "duet-table-scrollable": this.breakpoint === "none-scrollable",
        "duet-m-0": this.margin === "none",
        "duet-theme-turva": this.theme === "turva",
      } }, h("slot", null)));
  }
  get element() { return this; }
  static get style() { return duetTableCss; }
}, [4, "duet-table", {
    "theme": [1025],
    "margin": [1],
    "variation": [1],
    "sticky": [4],
    "stickyDistance": [1, "sticky-distance"],
    "breakpoint": [1],
    "matchesBreakpoint": [32]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["duet-table"];
  components.forEach(tagName => { switch (tagName) {
    case "duet-table":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DuetTable);
      }
      break;
  } });
}

export { DuetTable as D, defineCustomElement as d };
