// @ts-check
const fs = require("fs")
const prettier = require("prettier")
const inquirer = require("inquirer")
const chalk = require("chalk")
const path = require("path")
const iconMetadata = require("../_data/duet-icons.json")

function difference(setA, setB) {
  const diff = new Set(setA)

  for (let elem of setB) {
    diff.delete(elem)
  }

  return diff
}

async function writeJSONFile(path, obj) {
  const prettierConfig = await prettier.resolveConfig(path, {})
  const formatted = prettier.format(JSON.stringify(obj), { ...prettierConfig, parser: "json" })
  fs.writeFileSync(path, formatted)
}

function pluralize(n, singular, plural = `${singular}s`) {
  return n === 1 ? singular : plural
}

// get list of all svg assets
const svgFiles = fs
  .readdirSync(path.join(__dirname, "..", "assets"))
  .filter(file => fs.statSync(path.join(__dirname, "..", "assets", file)).isFile())
  .map(file => path.parse(file).name)

// list of icons documented in json
const iconNames = Object.values(iconMetadata.icons).map(meta => meta.title)

// icons which are not yet documented
const undocumentedIcons = difference(new Set(svgFiles), new Set(iconNames))

// create questions for each undocumented icon
const questions = [...undocumentedIcons].map(icon => ({
  type: "input",
  name: icon,
  message: `Please enter a space-separated list of tags for ${chalk.yellow(icon)}:`,
}))

if (questions.length === 0) {
  console.log(`Found ${chalk.green("0")} untagged icons ðŸŽ‰`)
  process.exit(0)
} else {
  console.log(`Found ${chalk.red(questions.length)} untagged ${pluralize(questions.length, "icon")}\n`)
}

;(async function run() {
  const answers = await inquirer.prompt(questions)

  // add new icons to list and sort them
  Object.entries(answers)
    .map(([title, tags]) => ({ title, tags }))
    .forEach(metadata => iconMetadata.icons.push(metadata))

  iconMetadata.icons.sort((a, b) => (a.title > b.title ? 1 : -1))

  await writeJSONFile(path.join(__dirname, "../_data/duet-icons.json"), iconMetadata)

  console.log(chalk.green("\nTags added successfully!"))
})()
